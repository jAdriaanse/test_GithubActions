name: Build Project
on: [push]
jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest
    # This stops builds that are in-progress once a new commit comes in
    concurrency: 
      group: unity-build
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Posting an "in progress" message to slack
      - name: Post status to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.21.0
        with:
          channel-id: "C03V4JPBFM1"
          payload: |
            {
              "text": "Deployment Started",
              "attachments": [
                {
                  "pretext": "Build In Progress",
                  "color": "dbab09",
                  "fields": [
                    {
                      "title": "Status",
                      "short": true,
                      "value": "Build in Progress: \n https://github.com/jAdriaanse/test_GithubActions/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            } 
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN}}

      # Cache
      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: "./github_actions_test/Library"
          key: ${{ runner.os }}-library

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          # Comment this out if you're using a pro license
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          # Un-Comment the following lines if you're using a pro license
          # UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          # UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          # UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          #unityVersion: 2019.4.23f1
          projectPath: "./github_actions_test"
          targetPlatform: StandaloneWindows64
        # Return License (Un-Comment if you're using a pro license)
        #- name: Return license
        #  uses: game-ci/unity-return-license@v1
        #  if: always()

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build

      
      # Posting an "completed" message to slack
      - uses: slackapi/slack-github-action@v1.21.0
        with:
          channel-id: "C03V4JPBFM1"
          update-ts: ${{ steps.slack.outputs.ts }}
          payload: |
            {
              "text": "Deployment Finished",
              "attachments": [
                {
                  "pretext": "Build Completed",
                  "color": "28a745",
                  "fields": [
                    {
                      "title": "Status",
                      "short": true,
                      "value": "Build Completed: \n https://github.com/jAdriaanse/test_GithubActions/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN}}